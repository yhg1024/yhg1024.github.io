/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.81
 * Generated at: 2023-11-27 05:00:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.book;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("    <meta name=\"description\" content=\"\">\n");
      out.write("    <meta name=\"author\" content=\"\">\n");
      out.write("\n");
      out.write("    <title>SB Admin 2 - Register</title>\n");
      out.write("\n");
      out.write("    <!-- Custom fonts for this template-->\n");
      out.write("    <link href=\"../vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("    <link\n");
      out.write("        href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\"\n");
      out.write("        rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("    <!-- Custom styles for this template-->\n");
      out.write("    <link href=\"../css/sb-admin-2.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("	window.onload = function(){\n");
      out.write("		console.log('onload event 발생');\n");
      out.write("		/* 변수선언 \n");
      out.write("		 	var - 변수의 중복선언이 가능\n");
      out.write("		 	let - 지역변수, 중복선언 불가능\n");
      out.write("		 	const - 지역상수, 중복선언 불가능\n");
      out.write("		 */\n");
      out.write("		let regBtn = document.querySelector(\"#regBtn\");\n");
      out.write("		\n");
      out.write("		// 익명의 함수를 작성 할 수도 있고, 이미 작성된 함수의 이름을 넘겨줄 수도 있다\n");
      out.write("		// 함수의 이름을 넣어줄때에는 함수이름 뒤에 ()를 붙이면 안됩니다!!!!!\n");
      out.write("		// 함수이름() : 함수를 실행하라는 의미\n");
      out.write("		regBtn.addEventListener('click', validationCheck);\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	function validationCheck(){\n");
      out.write("		if(id.value == \"\"){\n");
      out.write("			alert(\"아이디를 입력해주세요\");\n");
      out.write("			id.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		if(id.value.length > 10){\n");
      out.write("			alert('아이디의 길이는 10자를 초과 할 수 없습니다.');\n");
      out.write("			id.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		let name = document.querySelector(\"#name\");\n");
      out.write("		if(name.value == \"\"){\n");
      out.write("			alert(\"이름을 입력해주세요\");\n");
      out.write("			name.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		if(name.value.length > 15){\n");
      out.write("			alert(\"이름의 길이는 15자를 초과 할 수 없습니다.\");\n");
      out.write("			name.focus();\n");
      out.write("		}\n");
      out.write("		if(email.value == \"\"){\n");
      out.write("			alert(\"이메일을 입력해주세요\");\n");
      out.write("			email.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		if(email.value.length > 100){\n");
      out.write("			alert(\"이메일의 길이는 100자를 초과 할 수 없습니다.\");\n");
      out.write("			email.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		// 정규식 패턴문자열을 생성\n");
      out.write("		let email_reg = /^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/;\n");
      out.write("		// 패턴형식과 일치하는지 확인\n");
      out.write("		if(!email_reg.test(email.value)){\n");
      out.write("			alert(\"이메일 형식이 일치하지 않습니다.\");\n");
      out.write("			email.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		if(pw.value == \"\"){\n");
      out.write("			alert(\"비밀번호를 입력해주세요.\");\n");
      out.write("			pw.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		if(pw.value.length > 10){\n");
      out.write("			alert(\"비밀번호는 10자리를 초과 할 수 없습니다.\");\n");
      out.write("			pw.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		if(pw.value != pwCheck.value){\n");
      out.write("			alert(\"비밀번호가 일치하지 않습니다. 비밀번호를 확인해주세요.\");\n");
      out.write("			pw.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		// 등록 요청\n");
      out.write("		regForm.action = \"/book/regProcess\"; // 요청 URL 설정\n");
      out.write("		regForm.method = \"post\"; \n");
      out.write("		// 폼을 전송 -> 새로운 페이지를 요청\n");
      out.write("		regForm.submit();\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	function getByteLength(str) {\n");
      out.write("	  // TextEncoder 객체 생성 (UTF-8 사용) : 한글 3byte로 계산됨\n");
      out.write("	  var encoder = new TextEncoder('utf-8');\n");
      out.write("	  // 문자열을 바이트 배열로 인코딩\n");
      out.write("	  var encoded = encoder.encode(str);\n");
      out.write("	  // 바이트 배열의 길이 반환\n");
      out.write("	  return encoded.length;\n");
      out.write("	}\n");
      out.write("	</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body class=\"bg-gradient-primary\">\n");
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div class=\"card o-hidden border-0 shadow-lg my-5\">\n");
      out.write("            <div class=\"card-body p-0\">\n");
      out.write("                <!-- Nested Row within Card Body -->\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col-lg-5 d-none d-lg-block rabbit\"></div>\n");
      out.write("                    <div class=\"col-lg-7\">\n");
      out.write("                        <div class=\"p-5\">\n");
      out.write("                            <div class=\"text-center\">\n");
      out.write("                                <h1 class=\"h4 text-gray-900 mb-4\">회원가입</h1>\n");
      out.write("                            </div>\n");
      out.write("                            <form name=\"regForm\" class=\"user\">\n");
      out.write("                                <div class=\"form-group\">\n");
      out.write("                                    <input type=\"text\" class=\"form-control form-control-user\" \n");
      out.write("                                    	id=\"id\" name=\"id\" placeholder=\"id 입력\" >\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"form-group\">\n");
      out.write("                                    <input type=\"text\" class=\"form-control form-control-user\" \n");
      out.write("                                    	id=\"name\" name=\"name\" placeholder=\"이름 입력\" >\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"form-group\">\n");
      out.write("                                    <input type=\"email\" class=\"form-control form-control-user\" id=\"email\"\n");
      out.write("                                       name=\"email\" placeholder=\"email 입력 \">\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"form-group row\">\n");
      out.write("                                    <div class=\"col-sm-6 mb-3 mb-sm-0\">\n");
      out.write("                                        <input type=\"password\" class=\"form-control form-control-user\"\n");
      out.write("                                            id=\"pw\" name=\"pw\" placeholder=\"Password 입력\">\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"col-sm-6\">\n");
      out.write("                                        <input type=\"password\" class=\"form-control form-control-user\"\n");
      out.write("                                            id=\"pwCheck\" placeholder=\"Repeat Password 확인\">\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                                <a id=\"regBtn\" class=\"btn btn-primary btn-user btn-block\">\n");
      out.write("                                    회원가입\n");
      out.write("                                </a>\n");
      out.write("                                <hr>\n");
      out.write("                                <a href=\"index.html\" class=\"btn btn-google btn-user btn-block\">\n");
      out.write("                                    <i class=\"fab fa-google fa-fw\"></i> Register with Google\n");
      out.write("                                </a>\n");
      out.write("                                <a href=\"index.html\" class=\"btn btn-facebook btn-user btn-block\">\n");
      out.write("                                    <i class=\"fab fa-facebook-f fa-fw\"></i> Register with Facebook\n");
      out.write("                                </a>\n");
      out.write("                            </form>\n");
      out.write("                            <hr>\n");
      out.write("                            <div class=\"text-center\">\n");
      out.write("                                <a class=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"text-center\">\n");
      out.write("                                <a class=\"small\" href=\"login.html\">Already have an account? Login!</a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Bootstrap core JavaScript-->\n");
      out.write("    <script src=\"../vendor/jquery/jquery.min.js\"></script>\n");
      out.write("    <script src=\"../vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Core plugin JavaScript-->\n");
      out.write("    <script src=\"../vendor/jquery-easing/jquery.easing.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Custom scripts for all pages-->\n");
      out.write("    <script src=\"../js/sb-admin-2.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
