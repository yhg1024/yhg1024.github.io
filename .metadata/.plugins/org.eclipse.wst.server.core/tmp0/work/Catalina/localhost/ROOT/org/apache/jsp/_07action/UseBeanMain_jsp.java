/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.81
 * Generated at: 2023-11-10 00:43:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._07action;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.momo.dto.BoardDto;

public final class UseBeanMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.momo.dto.BoardDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- \r\n");
      out.write("	자바빈이랑?\r\n");
      out.write("		요청발생시 화면으로부터 입력받은 데이터를 하나의 객체(DTO, VO)에 담아 편이하게 사용할 수 있습니다.\r\n");
      out.write("		JSP 페이지간의 데이터 전달할 경우 자바빈을 이용합니다.\r\n");
      out.write("		표준 액션태그를 이용해 자바빈을 활용하면 코드가 간결해집니다.\r\n");
      out.write("		\r\n");
      out.write("	자바빈으로 생성될수 있는 객체(DTO/VO)\r\n");
      out.write("		- 자바빈은 기본(default)패키지 이외의 패키지에 속해 있어야 한다.\r\n");
      out.write("		- 기본 생성자가 존재해야 한다.\r\n");
      out.write("		- 멤버변수의 접근제어자는 private로 선언되어야 한다.\r\n");
      out.write("		- 멤버변수에 접근 가능한 getter 와 setter 메서드가 존재해야 한다.\r\n");
      out.write("		- getter 와 setter는 접근자가 public으로 선언되어야 한다. \r\n");
      out.write("		\r\n");
      out.write(" 	");
      out.write(" : 자바빈 생성\r\n");
      out.write(" 	");
      out.write(" : 자바빈 속성을 저장합니다.\r\n");
      out.write(" 	");
      out.write(" : 자바빈 속성을 추출합니다.\r\n");
      out.write(" 	\r\n");
      out.write(" 	id : 자바빈즈 이름\r\n");
      out.write(" 	class : 패키지명을 포함한 클래스명\r\n");
      out.write(" 	scope : 저장될 영역\r\n");
      out.write(" -->\r\n");
      out.write(" <!-- 객체 생성 -->\r\n");
      out.write(" ");
      com.momo.dto.BoardDto boardDto = null;
      boardDto = (com.momo.dto.BoardDto) _jspx_page_context.getAttribute("boardDto", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (boardDto == null){
        boardDto = new com.momo.dto.BoardDto();
        _jspx_page_context.setAttribute("boardDto", boardDto, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write(" <!-- setProperty 메서드를 이용해서 속성값을 지정 \r\n");
      out.write(" 		property : 필드명\r\n");
      out.write(" 		name : 자바빈즈 이름\r\n");
      out.write(" 		value : 필드값\r\n");
      out.write(" -->\r\n");
      out.write(" ");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("boardDto"), "content", "내용", null, null, false);
      out.write('\r');
      out.write('\n');
      out.write(' ');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("boardDto"), "title", "제목", null, null, false);
      out.write("\r\n");
      out.write(" 				\r\n");
 
	if (request.getAttribute("boardDto") != null) {
		BoardDto dto = (BoardDto)request.getAttribute("boardDto");

      out.write("\r\n");
      out.write("		제목 : ");
      out.print( dto.getTitle() );
      out.write("\r\n");
      out.write("		내용 : ");
      out.print( dto.getContent() );
      out.write("\r\n");
      out.write("\r\n");
	
	}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
